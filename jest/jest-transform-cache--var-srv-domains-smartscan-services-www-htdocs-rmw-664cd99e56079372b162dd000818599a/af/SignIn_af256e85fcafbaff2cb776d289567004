/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _jsxFileName = '/var/srv/domains/smartscan.services/www/htdocs/rmw/src/components/SignIn/SignIn.js';var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_Paper = require('material-ui/Paper'); /* istanbul ignore next */var _Paper2 = _interopRequireDefault(_Paper);
var /* istanbul ignore next */_Icons = require('../../components/Icons');
var /* istanbul ignore next */_reactIntl = require('react-intl');
var /* istanbul ignore next */_muiThemeable = require('material-ui/styles/muiThemeable'); /* istanbul ignore next */var _muiThemeable2 = _interopRequireDefault(_muiThemeable);
var /* istanbul ignore next */_FloatingActionButton = require('material-ui/FloatingActionButton'); /* istanbul ignore next */var _FloatingActionButton2 = _interopRequireDefault(_FloatingActionButton);
var /* istanbul ignore next */_TextField = require('material-ui/TextField'); /* istanbul ignore next */var _TextField2 = _interopRequireDefault(_TextField);
var /* istanbul ignore next */_RaisedButton = require('material-ui/RaisedButton'); /* istanbul ignore next */var _RaisedButton2 = _interopRequireDefault(_RaisedButton);
var /* istanbul ignore next */_FontIcon = require('material-ui/FontIcon'); /* istanbul ignore next */var _FontIcon2 = _interopRequireDefault(_FontIcon);
var /* istanbul ignore next */_reactRouterDom = require('react-router-dom');
var /* istanbul ignore next */_Divider = require('material-ui/Divider'); /* istanbul ignore next */var _Divider2 = _interopRequireDefault(_Divider);
var /* istanbul ignore next */_Activity = require('../../components/Activity');
var /* istanbul ignore next */_CircularProgress = require('material-ui/CircularProgress'); /* istanbul ignore next */var _CircularProgress2 = _interopRequireDefault(_CircularProgress);
var /* istanbul ignore next */_Snackbar = require('material-ui/Snackbar'); /* istanbul ignore next */var _Snackbar2 = _interopRequireDefault(_Snackbar);
var /* istanbul ignore next */_IconButton = require('material-ui/IconButton'); /* istanbul ignore next */var _IconButton2 = _interopRequireDefault(_IconButton);
var /* istanbul ignore next */_config = require('../../config'); /* istanbul ignore next */var _config2 = _interopRequireDefault(_config);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

const styles = {
  paper: {
    margin: 0,
    padding: 15,
    minWidth: 300 },

  header: {
    display: 'flex',
    flexDirection: 'row',
    justifyContent: 'space-between' },

  container: {
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    margin: 5,
    paddingTop: 50 },

  buttons_container: {
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'space-between' },

  button: {
    marginTop: 6 },

  sign_up_button: {
    float: 'right',
    overflow: 'none',
    alignSelf: 'flex-end',
    marginRight: -43 } };




const SignIn = props => {

  let email = null;
  let password = null;

  const {
    muiTheme,
    intl,
    auth,
    signInWithProvider,
    push,
    router,
    signInUser,
    getValidationErrorMessage,
    authError } =
  props;

  const isSnackbarOpen = auth.error !== undefined &&
  auth.error.message &&
  auth.error.code.indexOf('email') < 0 &&
  auth.error.code.indexOf('password') < 0;


  const hanleSignInSubmit = () => {

    signInUser({ email: email.getValue(), password: password.getValue() });
  };


  const onSignInSuccess = user => {

    const pathname = ((((router || {}).location || {}).state || {}).from || {}).pathname;
    push(pathname || '/');

  };

  const getProviderIcon = provider => {

    const color = muiTheme.palette.primary2Color;

    return (/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_IconButton2.default, /* istanbul ignore next */{
          key: provider,
          onTouchTap: () => {signInWithProvider(provider, onSignInSuccess);},
          tooltip: intl.formatMessage({ id: `sign_in_with_${provider}` }), __source: { fileName: _jsxFileName, lineNumber: 93 }, __self: undefined },
        provider === 'google' && /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_Icons.GoogleIcon, /* istanbul ignore next */{ color: color, __source: { fileName: _jsxFileName, lineNumber: 97 }, __self: undefined }),
        provider === 'facebook' && /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_Icons.FacebookIcon, /* istanbul ignore next */{ color: color, __source: { fileName: _jsxFileName, lineNumber: 98 }, __self: undefined }),
        provider === 'twitter' && /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_Icons.TwitterIcon, /* istanbul ignore next */{ color: color, __source: { fileName: _jsxFileName, lineNumber: 99 }, __self: undefined }),
        provider === 'github' && /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_Icons.GitHubIcon, /* istanbul ignore next */{ color: color, __source: { fileName: _jsxFileName, lineNumber: 100 }, __self: undefined })));

  };


  return (
    /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_Activity.Activity, /* istanbul ignore next */{
        title: intl.formatMessage({ id: 'sign_in' }), __source: { fileName: _jsxFileName, lineNumber: 106 }, __self: undefined },
      /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ style: styles.container, __source: { fileName: _jsxFileName, lineNumber: 108 }, __self: undefined },

        auth.isFetching && /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_CircularProgress2.default, /* istanbul ignore next */{ size: 80, thickness: 5, __source: { fileName: _jsxFileName, lineNumber: 110 }, __self: undefined }),

        !auth.isFetching &&
        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_Paper2.default, /* istanbul ignore next */{ zDepth: 2, style: styles.paper, __source: { fileName: _jsxFileName, lineNumber: 113 }, __self: undefined },
          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ style: styles.header, __source: { fileName: _jsxFileName, lineNumber: 114 }, __self: undefined },
            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'h3', /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 115 }, __self: undefined }, intl.formatMessage({ id: 'sign_in' }).toUpperCase()),
            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_FloatingActionButton2.default, /* istanbul ignore next */{
                secondary: true,
                onTouchTap: () => {push('/signup');authError(undefined);},
                style: styles.sign_up_button, __source: { fileName: _jsxFileName, lineNumber: 116 }, __self: undefined },
              /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_FontIcon2.default, /* istanbul ignore next */{
                  className: 'material-icons', __source: { fileName: _jsxFileName, lineNumber: 120 }, __self: undefined }, /* istanbul ignore next */'person_add'))),




          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ style: { marginBottom: 20 }, __source: { fileName: _jsxFileName, lineNumber: 126 }, __self: undefined },
            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_TextField2.default, /* istanbul ignore next */{
              id: 'email',
              ref: field => {email = field;},
              hintText: intl.formatMessage({ id: 'email' }),
              errorText: getValidationErrorMessage('email'),
              floatingLabelText: intl.formatMessage({ id: 'email' }),
              type: 'Email',
              fullWidth: true, __source: { fileName: _jsxFileName, lineNumber: 127 }, __self: undefined }),
            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'br', /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 135 }, __self: undefined }),
            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_TextField2.default, /* istanbul ignore next */{
              id: 'password',
              ref: field => {password = field;},
              hintText: intl.formatMessage({ id: 'password' }),
              errorText: getValidationErrorMessage('password'),
              floatingLabelText: intl.formatMessage({ id: 'password' }),
              type: 'Password',
              fullWidth: true, __source: { fileName: _jsxFileName, lineNumber: 136 }, __self: undefined })),



          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ style: { margin: 5, marginBottom: 10 }, __source: { fileName: _jsxFileName, lineNumber: 147 }, __self: undefined },
            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactRouterDom.Link, /* istanbul ignore next */{
                to: `/reset`,
                onTouchTap: () => {push('/reset');authError(undefined);},
                style: { color: muiTheme.palette.primary3Color }, __source: { fileName: _jsxFileName, lineNumber: 148 }, __self: undefined },
              intl.formatMessage({ id: 'forgort_password' })),
            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'br', /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 153 }, __self: undefined })),


          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_RaisedButton2.default, /* istanbul ignore next */{
            label: intl.formatMessage({ id: 'sign_in' }),
            secondary: true,
            style: styles.button,
            fullWidth: true,
            onTouchTap: hanleSignInSubmit,
            icon:
            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_FontIcon2.default, /* istanbul ignore next */{
                color: muiTheme.palette.primary2Color,
                className: 'material-icons', __source: { fileName: _jsxFileName, lineNumber: 163 }, __self: undefined }, /* istanbul ignore next */'lock'), __source: { fileName: _jsxFileName, lineNumber: 156 }, __self: undefined }),




          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'br', /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 170 }, __self: undefined }),

          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ style: { marginBottom: 15 }, __source: { fileName: _jsxFileName, lineNumber: 172 }, __self: undefined }),
          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_Divider2.default, /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 173 }, __self: undefined }),
          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ style: { marginBottom: 10 }, __source: { fileName: _jsxFileName, lineNumber: 174 }, __self: undefined }),

          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ style: styles.buttons_container, __source: { fileName: _jsxFileName, lineNumber: 176 }, __self: undefined },
            /* istanbul ignore next */_config2.default.providers.map(p => {
              return getProviderIcon(p);
            })))),









      /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_Snackbar2.default, /* istanbul ignore next */{
        bodyStyle: { height: '100%' },
        open: isSnackbarOpen,
        message: isSnackbarOpen ? auth.error.message : '',
        action: 'OK',
        autoHideDuration: 5000,
        onRequestClose: () => {authError(undefined);},
        onActionTouchTap: () => {authError(undefined);}, __source: { fileName: _jsxFileName, lineNumber: 189 }, __self: undefined })));





}; /* istanbul ignore next */exports.default =


/* istanbul ignore next */(0, _reactIntl.injectIntl)( /* istanbul ignore next */(0, _muiThemeable2.default)()(SignIn));
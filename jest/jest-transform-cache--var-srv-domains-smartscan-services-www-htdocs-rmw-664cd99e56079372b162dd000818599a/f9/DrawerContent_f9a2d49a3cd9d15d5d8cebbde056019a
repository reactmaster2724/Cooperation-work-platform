/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _jsxFileName = '/var/srv/domains/smartscan.services/www/htdocs/rmw/src/components/Drawer/DrawerContent.js';var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_muiThemeable = require('material-ui/styles/muiThemeable'); /* istanbul ignore next */var _muiThemeable2 = _interopRequireDefault(_muiThemeable);
var /* istanbul ignore next */_materialUiSelectableMenuList = require('material-ui-selectable-menu-list');
var /* istanbul ignore next */_FontIcon = require('material-ui/FontIcon'); /* istanbul ignore next */var _FontIcon2 = _interopRequireDefault(_FontIcon);
var /* istanbul ignore next */_Toggle = require('material-ui/Toggle'); /* istanbul ignore next */var _Toggle2 = _interopRequireDefault(_Toggle);
var /* istanbul ignore next */_themes = require('../../themes'); /* istanbul ignore next */var _themes2 = _interopRequireDefault(_themes);
var /* istanbul ignore next */_locales = require('../../locales'); /* istanbul ignore next */var _locales2 = _interopRequireDefault(_locales);
var /* istanbul ignore next */_reactIntl = require('react-intl'); /* istanbul ignore next */function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

const DrawerContent = props => {

  const {
    router,
    responsiveDrawer,
    setResponsive,
    theme,
    locale,
    updateTheme,
    updateLocale,
    intl,
    muiTheme,
    auth,
    signOutUser,
    isAuthorised } =
  props;

  const handleChange = (event, index) => {
    const { push, responsiveDrawer, setDrawerOpen } = props;

    if (responsiveDrawer.open && index !== undefined) {
      setDrawerOpen(false);
    }

    if (index !== undefined && index !== Object(index)) {
      push(index);
    }
  };

  const themeItems = /* istanbul ignore next */_themes2.default.map(t => {
    return {
      value: undefined,
      visible: true,
      primaryText: intl.formatMessage({ id: t.id }),
      onTouchTap: () => {updateTheme(t.id);},
      rightIcon: /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_FontIcon2.default, /* istanbul ignore next */{
          className: 'material-icons',
          color: t.id === theme ? muiTheme.palette.primary1Color : undefined, __source: { fileName: _jsxFileName, lineNumber: 45 }, __self: undefined }, /* istanbul ignore next */'style') };



  });



  const localeItems = /* istanbul ignore next */_locales2.default.map(l => {

    return {
      value: undefined,
      visible: true,
      primaryText: intl.formatMessage({ id: l.locale }),
      onTouchTap: () => {updateLocale(l.locale);},
      rightIcon: /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_FontIcon2.default, /* istanbul ignore next */{
          className: 'material-icons',
          color: l.locale === locale ? muiTheme.palette.primary1Color : undefined, __source: { fileName: _jsxFileName, lineNumber: 62 }, __self: undefined }, /* istanbul ignore next */'language') };



  });


  const menuItems = [
  {
    value: '/dashboard',
    visible: isAuthorised,
    primaryText: intl.formatMessage({ id: 'dashboard' }),
    leftIcon: /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_FontIcon2.default, /* istanbul ignore next */{ className: 'material-icons', __source: { fileName: _jsxFileName, lineNumber: 76 }, __self: undefined }, /* istanbul ignore next */'dashboard') },

  {
    value: '/users',
    visible: isAuthorised,
    primaryText: intl.formatMessage({ id: 'users' }),
    leftIcon: /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_FontIcon2.default, /* istanbul ignore next */{ className: 'material-icons', __source: { fileName: _jsxFileName, lineNumber: 82 }, __self: undefined }, /* istanbul ignore next */'group') },

  {
    value: '/tasks',
    visible: isAuthorised,
    primaryText: intl.formatMessage({ id: 'tasks' }),
    leftIcon: /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_FontIcon2.default, /* istanbul ignore next */{ className: 'material-icons', __source: { fileName: _jsxFileName, lineNumber: 88 }, __self: undefined }, /* istanbul ignore next */'list') },

  {
    value: '/about',
    visible: isAuthorised,
    primaryText: intl.formatMessage({ id: 'about' }),
    leftIcon: /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_FontIcon2.default, /* istanbul ignore next */{ className: 'material-icons', __source: { fileName: _jsxFileName, lineNumber: 94 }, __self: undefined }, /* istanbul ignore next */'info_outline') },

  {
    divider: true,
    visible: isAuthorised },

  {
    primaryText: intl.formatMessage({ id: 'settings' }),
    primaryTogglesNestedList: true,
    leftIcon: /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_FontIcon2.default, /* istanbul ignore next */{ className: 'material-icons', __source: { fileName: _jsxFileName, lineNumber: 103 }, __self: undefined }, /* istanbul ignore next */'settings'),
    nestedItems: [
    {
      primaryText: intl.formatMessage({ id: 'theme' }),
      secondaryText: intl.formatMessage({ id: theme }),
      primaryTogglesNestedList: true,
      leftIcon: /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_FontIcon2.default, /* istanbul ignore next */{ className: 'material-icons', __source: { fileName: _jsxFileName, lineNumber: 109 }, __self: undefined }, /* istanbul ignore next */'style'),
      nestedItems: themeItems },

    {
      primaryText: intl.formatMessage({ id: 'language' }),
      secondaryText: intl.formatMessage({ id: locale }),
      primaryTogglesNestedList: true,
      leftIcon: /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_FontIcon2.default, /* istanbul ignore next */{ className: 'material-icons', __source: { fileName: _jsxFileName, lineNumber: 116 }, __self: undefined }, /* istanbul ignore next */'language'),
      nestedItems: localeItems },

    {
      primaryText: intl.formatMessage({ id: 'responsive' }),
      leftIcon: /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_FontIcon2.default, /* istanbul ignore next */{ className: 'material-icons', __source: { fileName: _jsxFileName, lineNumber: 121 }, __self: undefined }, /* istanbul ignore next */'chrome_reader_mode'),
      rightToggle: /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_Toggle2.default, /* istanbul ignore next */{
        toggled: responsiveDrawer.responsive,
        onToggle:
        () => {setResponsive(!responsiveDrawer.responsive);}, __source: { fileName: _jsxFileName, lineNumber: 122 }, __self: undefined }) }] }];







  const handleSignOut = () => {signOutUser();};

  const authItems = [
  {
    value: '/my_account',
    primaryText: intl.formatMessage({ id: 'my_account' }),
    leftIcon: /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_FontIcon2.default, /* istanbul ignore next */{ className: 'material-icons', __source: { fileName: _jsxFileName, lineNumber: 139 }, __self: undefined }, /* istanbul ignore next */'account_box') },

  {
    value: '/signin',
    onTouchTap: handleSignOut,
    primaryText: intl.formatMessage({ id: 'sign_out' }),
    leftIcon: /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_FontIcon2.default, /* istanbul ignore next */{ className: 'material-icons', __source: { fileName: _jsxFileName, lineNumber: 145 }, __self: undefined }, /* istanbul ignore next */'lock') }];




  return (
    /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ style: {
          display: 'flex',
          flexDirection: 'column' }, __source: { fileName: _jsxFileName, lineNumber: 151 }, __self: undefined },

      /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_materialUiSelectableMenuList.SelectableMenuList, /* istanbul ignore next */{
        items: auth.isMenuOpen ? authItems : menuItems,
        onIndexChange: handleChange,
        index: router ? router.location.pathname : '/', __source: { fileName: _jsxFileName, lineNumber: 155 }, __self: undefined })));





}; /* istanbul ignore next */exports.default =

/* istanbul ignore next */(0, _reactIntl.injectIntl)( /* istanbul ignore next */(0, _muiThemeable2.default)()(DrawerContent));
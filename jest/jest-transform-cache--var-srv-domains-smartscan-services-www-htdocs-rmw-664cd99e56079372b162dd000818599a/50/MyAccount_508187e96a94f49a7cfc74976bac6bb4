/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });exports.MyAccountTest = exports.MyAccount = undefined;var _jsxFileName = '/var/srv/domains/smartscan.services/www/htdocs/rmw/src/containers/MyAccount/MyAccount.js';var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_reactRedux = require('react-redux');
var /* istanbul ignore next */_propTypes = require('prop-types'); /* istanbul ignore next */var _propTypes2 = _interopRequireDefault(_propTypes);
var /* istanbul ignore next */_muiThemeable = require('material-ui/styles/muiThemeable'); /* istanbul ignore next */var _muiThemeable2 = _interopRequireDefault(_muiThemeable);
var /* istanbul ignore next */_reactIntl = require('react-intl');
var /* istanbul ignore next */_Paper = require('material-ui/Paper'); /* istanbul ignore next */var _Paper2 = _interopRequireDefault(_Paper);
var /* istanbul ignore next */_TextField = require('material-ui/TextField'); /* istanbul ignore next */var _TextField2 = _interopRequireDefault(_TextField);
var /* istanbul ignore next */_RaisedButton = require('material-ui/RaisedButton'); /* istanbul ignore next */var _RaisedButton2 = _interopRequireDefault(_RaisedButton);
var /* istanbul ignore next */_FontIcon = require('material-ui/FontIcon'); /* istanbul ignore next */var _FontIcon2 = _interopRequireDefault(_FontIcon);
var /* istanbul ignore next */_Avatar = require('material-ui/Avatar'); /* istanbul ignore next */var _Avatar2 = _interopRequireDefault(_Avatar);
var /* istanbul ignore next */_actions = require('../../store/auth/actions');
var /* istanbul ignore next */_selectors = require('../../store/auth/selectors');
var /* istanbul ignore next */_reactRouterRedux = require('react-router-redux');
var /* istanbul ignore next */_Activity = require('../../components/Activity'); /* istanbul ignore next */function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

const styles = {
  paper: {
    height: '100%',
    display: 'block',
    margin: 15,
    padding: 15 },

  header: {
    display: 'flex',
    flexDirection: 'column',
    alignItems: 'center' },

  container: {
    display: 'flex',
    flexWrap: 'wrap',
    alignItems: 'center',
    justifyContent: 'center',
    paddingTop: 50 },

  button: {
    marginTop: 6,
    align: 'left' },

  avatar: {
    float: 'right',
    overflow: 'none',
    alignSelf: 'center',
    marginTop: -60 } };



class MyAccount extends /* istanbul ignore next */_react.Component {

  constructor(props) {
    super(props); /* istanbul ignore next */this.







    hanleUpdateSubmit = () => {
      const { updateUser } = this.props;

      updateUser({ displayName: this.name.getValue() });
    }; /* istanbul ignore next */this.

    handlePasswordChangeSuccess = () => {

    }; /* istanbul ignore next */this.

    handlePasswordChangeSubmit = () => {
      const { changePassword } = this.props;

      if (this.password.getValue().localeCompare(this.confirm_password.getValue()) === 0) {
        changePassword(this.password.getValue(), this.handlePasswordChangeSuccess);
      } else {
        /* istanbul ignore next */(0, _actions.authError)({
          errorCode: 'auth/invalid-confirm_password',
          errorMessage: 'Masswords doesn`t match' });

      }
    };this.email = null;this.name = null;this.password = null;this.confirm_password = null;}


  render() {
    const { intl, getValidationErrorMessage, auth } = this.props;

    return (
      /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_Activity.Activity, /* istanbul ignore next */{
          title: intl.formatMessage({ id: 'my_account' }), __source: { fileName: _jsxFileName, lineNumber: 86 }, __self: this },

        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ style: styles.container, __source: { fileName: _jsxFileName, lineNumber: 89 }, __self: this },

          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_Paper2.default, /* istanbul ignore next */{ zDepth: 2, style: styles.paper, __source: { fileName: _jsxFileName, lineNumber: 91 }, __self: this },
            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ style: styles.header, __source: { fileName: _jsxFileName, lineNumber: 92 }, __self: this },


              /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_Avatar2.default, /* istanbul ignore next */{
                style: styles.avatar,
                size: 80,
                icon: auth.photoURL === null ? /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_FontIcon2.default, /* istanbul ignore next */{ className: 'material-icons', __source: { fileName: _jsxFileName, lineNumber: 98 }, __self: this }, /* istanbul ignore next */'account_circle') : undefined,
                src: auth.photoURL, __source: { fileName: _jsxFileName, lineNumber: 95 }, __self: this }),


              /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'h3', /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 102 }, __self: this }, auth.displayName)),


            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ style: { marginBottom: 20 }, __source: { fileName: _jsxFileName, lineNumber: 105 }, __self: this },
              /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_TextField2.default, /* istanbul ignore next */{
                id: 'email',
                disabled: true,
                ref: field => {this.email = field;},
                defaultValue: auth.email,
                errorText: getValidationErrorMessage('email'),
                hintText: 'Email',
                type: 'Email',
                fullWidth: true, __source: { fileName: _jsxFileName, lineNumber: 106 }, __self: this }),
              /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'br', /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 115 }, __self: this }),
              /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_TextField2.default, /* istanbul ignore next */{
                id: 'name',
                ref: field => {this.name = field;},
                defaultValue: auth.displayName,
                errorText: getValidationErrorMessage('name'),
                floatingLabelText: intl.formatMessage({ id: 'name' }),
                hintText: intl.formatMessage({ id: 'name' }),
                type: 'Text',
                fullWidth: true, __source: { fileName: _jsxFileName, lineNumber: 116 }, __self: this })),



            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_RaisedButton2.default, /* istanbul ignore next */{
              label: intl.formatMessage({ id: 'save' }),
              secondary: true,
              disabled: auth.isFetching,
              style: styles.button,
              fullWidth: true,
              onTouchTap: this.hanleUpdateSubmit,
              icon:
              /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_FontIcon2.default, /* istanbul ignore next */{
                  className: 'material-icons', __source: { fileName: _jsxFileName, lineNumber: 136 }, __self: this }, /* istanbul ignore next */'save'), __source: { fileName: _jsxFileName, lineNumber: 128 }, __self: this }),




            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'br', /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 142 }, __self: this })),



          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_Paper2.default, /* istanbul ignore next */{ zDepth: 2, style: styles.paper, __source: { fileName: _jsxFileName, lineNumber: 146 }, __self: this },
            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ style: styles.header, __source: { fileName: _jsxFileName, lineNumber: 147 }, __self: this },

              /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'h3', /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 149 }, __self: this }, intl.formatMessage({ id: 'password' }))),


            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ style: { marginBottom: 20 }, __source: { fileName: _jsxFileName, lineNumber: 152 }, __self: this },
              /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_TextField2.default, /* istanbul ignore next */{
                id: 'password',
                ref: field => {this.password = field;},
                errorText: getValidationErrorMessage('password'),
                floatingLabelText: intl.formatMessage({ id: 'password' }),
                hintText: intl.formatMessage({ id: 'password' }),
                type: 'Password',
                fullWidth: true, __source: { fileName: _jsxFileName, lineNumber: 153 }, __self: this }),
              /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'br', /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 161 }, __self: this }),
              /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_TextField2.default, /* istanbul ignore next */{
                id: 'confirm_password',
                ref: field => {this.confirm_password = field;},
                errorText: getValidationErrorMessage('confirm_password'),
                floatingLabelText: intl.formatMessage({ id: 'confirm_password' }),
                hintText: intl.formatMessage({ id: 'confirm_password' }),
                type: 'Password',
                fullWidth: true, __source: { fileName: _jsxFileName, lineNumber: 162 }, __self: this })),



            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_RaisedButton2.default, /* istanbul ignore next */{
              label: intl.formatMessage({ id: 'change_password' }),
              disabled: auth.isFetching,
              secondary: true,
              fullWidth: true,
              onTouchTap: this.handlePasswordChangeSubmit,
              icon:
              /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_FontIcon2.default, /* istanbul ignore next */{
                  className: 'material-icons', __source: { fileName: _jsxFileName, lineNumber: 180 }, __self: this }, /* istanbul ignore next */'lock'), __source: { fileName: _jsxFileName, lineNumber: 173 }, __self: this }),




            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'br', /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 186 }, __self: this })))));









  }} /* istanbul ignore next */exports.MyAccount = MyAccount;



MyAccount.propTypes = {
  intl: /* istanbul ignore next */_reactIntl.intlShape.isRequired,
  muiTheme: /* istanbul ignore next */_propTypes2.default.object.isRequired,
  router: /* istanbul ignore next */_propTypes2.default.object.isRequired,
  authError: /* istanbul ignore next */_propTypes2.default.func.isRequired,
  push: /* istanbul ignore next */_propTypes2.default.func.isRequired,
  updateUser: /* istanbul ignore next */_propTypes2.default.func.isRequired,
  changePassword: /* istanbul ignore next */_propTypes2.default.func.isRequired };



const mapStateToProps = state => {
  const { auth, router } = state;
  return {
    auth,
    router,
    getValidationErrorMessage: fieldID => /* istanbul ignore next */(0, _selectors.getValidationErrorMessage)(auth, fieldID) };

};

const MyAccountTest = /* istanbul ignore next */exports.MyAccountTest = /* istanbul ignore next */(0, _reactIntl.injectIntl)( /* istanbul ignore next */(0, _muiThemeable2.default)()(MyAccount)); /* istanbul ignore next */exports.default =

/* istanbul ignore next */(0, _reactRedux.connect)(
mapStateToProps,
{ authError: /* istanbul ignore next */_actions.authError, push: /* istanbul ignore next */_reactRouterRedux.push, updateUser: /* istanbul ignore next */_actions.updateUser, changePassword: /* istanbul ignore next */_actions.changePassword })(
/* istanbul ignore next */(0, _reactIntl.injectIntl)( /* istanbul ignore next */(0, _muiThemeable2.default)()(MyAccount)));
/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var cov_21snih3uvz = function () {var path = '/var/srv/domains/smartscan.services/www/htdocs/rmw/src/store/users/types.js',hash = '2a2209cfb2f46d56b05db2822e3f209641b4459e',global = new Function('return this')(),gcv = '__coverage__',coverageData = { path: '/var/srv/domains/smartscan.services/www/htdocs/rmw/src/store/users/types.js', statementMap: { '0': { start: { line: 1, column: 16 }, end: { line: 1, column: 23 } }, '1': { start: { line: 4, column: 22 }, end: { line: 4, column: 42 } }, '2': { start: { line: 5, column: 22 }, end: { line: 5, column: 43 } }, '3': { start: { line: 6, column: 22 }, end: { line: 6, column: 43 } }, '4': { start: { line: 7, column: 20 }, end: { line: 7, column: 39 } }, '5': { start: { line: 8, column: 25 }, end: { line: 8, column: 49 } }, '6': { start: { line: 10, column: 28 }, end: { line: 10, column: 55 } }, '7': { start: { line: 11, column: 30 }, end: { line: 11, column: 59 } }, '8': { start: { line: 13, column: 28 }, end: { line: 13, column: 55 } }, '9': { start: { line: 14, column: 30 }, end: { line: 14, column: 59 } }, '10': { start: { line: 16, column: 28 }, end: { line: 16, column: 55 } }, '11': { start: { line: 17, column: 30 }, end: { line: 17, column: 59 } }, '12': { start: { line: 19, column: 30 }, end: { line: 19, column: 59 } }, '13': { start: { line: 21, column: 22 }, end: { line: 21, column: 43 } }, '14': { start: { line: 22, column: 28 }, end: { line: 22, column: 55 } }, '15': { start: { line: 23, column: 30 }, end: { line: 23, column: 59 } } }, fnMap: {}, branchMap: {}, s: { '0': 0, '1': 0, '2': 0, '3': 0, '4': 0, '5': 0, '6': 0, '7': 0, '8': 0, '9': 0, '10': 0, '11': 0, '12': 0, '13': 0, '14': 0, '15': 0 }, f: {}, b: {}, _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c' },coverage = global[gcv] || (global[gcv] = {});if (coverage[path] && coverage[path].hash === hash) {return coverage[path];}coverageData.hash = hash;return coverage[path] = coverageData;}();const namespace = /* istanbul ignore next */(++cov_21snih3uvz.s[0], 'USERS');


const FETCH = /* istanbul ignore next */exports.FETCH = (++cov_21snih3uvz.s[1], `${namespace}@FETCH`);
const DELETE = /* istanbul ignore next */exports.DELETE = (++cov_21snih3uvz.s[2], `${namespace}@DELETE`);
const CREATE = /* istanbul ignore next */exports.CREATE = (++cov_21snih3uvz.s[3], `${namespace}@CREATE`);
const EDIT = /* istanbul ignore next */exports.EDIT = (++cov_21snih3uvz.s[4], `${namespace}@EDIT`);
const CONNECTED = /* istanbul ignore next */exports.CONNECTED = (++cov_21snih3uvz.s[5], `${namespace}@CONNECTED`);

const CREATE_ERROR = /* istanbul ignore next */exports.CREATE_ERROR = (++cov_21snih3uvz.s[6], `${namespace}@CREATE_ERROR`);
const CREATE_SUCCESS = /* istanbul ignore next */exports.CREATE_SUCCESS = (++cov_21snih3uvz.s[7], `${namespace}@CREATE_SUCCESS`);

const UPDATE_ERROR = /* istanbul ignore next */exports.UPDATE_ERROR = (++cov_21snih3uvz.s[8], `${namespace}@UPDATE_ERROR`);
const UPDATE_SUCCESS = /* istanbul ignore next */exports.UPDATE_SUCCESS = (++cov_21snih3uvz.s[9], `${namespace}@UPDATE_SUCCESS`);

const DELETE_ERROR = /* istanbul ignore next */exports.DELETE_ERROR = (++cov_21snih3uvz.s[10], `${namespace}@DELETE_ERROR`);
const DELETE_SUCCESS = /* istanbul ignore next */exports.DELETE_SUCCESS = (++cov_21snih3uvz.s[11], `${namespace}@DELETE_SUCCESS`);

const UNDELETE_ERROR = /* istanbul ignore next */exports.UNDELETE_ERROR = (++cov_21snih3uvz.s[12], `${namespace}@UNDELETE_ERROR`);

const FILTER = /* istanbul ignore next */exports.FILTER = (++cov_21snih3uvz.s[13], `${namespace}@FILTER`);
const LOAD_SUCCESS = /* istanbul ignore next */exports.LOAD_SUCCESS = (++cov_21snih3uvz.s[14], `${namespace}@LOAD_SUCCESS`);
const UNLOAD_SUCCESS = /* istanbul ignore next */exports.UNLOAD_SUCCESS = (++cov_21snih3uvz.s[15], `${namespace}@UNLOAD_SUCCESS`);
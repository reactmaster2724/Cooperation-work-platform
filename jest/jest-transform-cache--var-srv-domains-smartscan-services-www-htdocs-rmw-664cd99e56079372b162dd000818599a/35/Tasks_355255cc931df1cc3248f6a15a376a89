/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _jsxFileName = '/var/srv/domains/smartscan.services/www/htdocs/rmw/src/containers/Tasks/Tasks.js';var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_lodash = require('lodash'); /* istanbul ignore next */var _lodash2 = _interopRequireDefault(_lodash);
var /* istanbul ignore next */_reactRedux = require('react-redux');
var /* istanbul ignore next */_propTypes = require('prop-types'); /* istanbul ignore next */var _propTypes2 = _interopRequireDefault(_propTypes);
var /* istanbul ignore next */_muiThemeable = require('material-ui/styles/muiThemeable'); /* istanbul ignore next */var _muiThemeable2 = _interopRequireDefault(_muiThemeable);
var /* istanbul ignore next */_reactIntl = require('react-intl');
var /* istanbul ignore next */_Activity = require('../../components/Activity');
var /* istanbul ignore next */_actions = require('../../store/tasks/actions');
var /* istanbul ignore next */_List = require('material-ui/List');
var /* istanbul ignore next */_Divider = require('material-ui/Divider'); /* istanbul ignore next */var _Divider2 = _interopRequireDefault(_Divider);
var /* istanbul ignore next */_FontIcon = require('material-ui/FontIcon'); /* istanbul ignore next */var _FontIcon2 = _interopRequireDefault(_FontIcon);
var /* istanbul ignore next */_IconButton = require('material-ui/IconButton'); /* istanbul ignore next */var _IconButton2 = _interopRequireDefault(_IconButton);
var /* istanbul ignore next */_TextField = require('material-ui/TextField'); /* istanbul ignore next */var _TextField2 = _interopRequireDefault(_TextField);
var /* istanbul ignore next */_FloatingActionButton = require('material-ui/FloatingActionButton'); /* istanbul ignore next */var _FloatingActionButton2 = _interopRequireDefault(_FloatingActionButton);
var /* istanbul ignore next */_CircularProgress = require('material-ui/CircularProgress'); /* istanbul ignore next */var _CircularProgress2 = _interopRequireDefault(_CircularProgress);
var /* istanbul ignore next */_Chip = require('material-ui/Chip'); /* istanbul ignore next */var _Chip2 = _interopRequireDefault(_Chip);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

const styles = {
  center_container: {
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    flexDirection: 'column',
    margin: 16 } };




class Tasks extends /* istanbul ignore next */_react.Component {

  constructor(props) {
    super(props); /* istanbul ignore next */this.







    handleKeyDown = event => {

      if (event.keyCode === 13) {
        this.handleAddTask();
      }
    }; /* istanbul ignore next */this.






    handleAddTask = () => {
      const { createTask } = this.props;
      createTask(this.name.getValue());
      this.name.setState({ value: "" });
    };this.name = null;}componentWillMount() {this.props.loadTasks();}componentWillUnmount() {//console.log('test');
    this.props.unloadTasks();}
  rednerTasks(tasks) {
    const { deleteTask } = this.props;

    return (/* istanbul ignore next */_lodash2.default.map(tasks, (task, key) => {
        return (/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ key: key, __source: { fileName: _jsxFileName, lineNumber: 62 }, __self: this },
            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_List.ListItem, /* istanbul ignore next */{
              key: key,
              primaryText: task,
              id: key,
              rightIconButton:
              /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_IconButton2.default, /* istanbul ignore next */{
                  onTouchTap: () => {deleteTask(key);}, __source: { fileName: _jsxFileName, lineNumber: 68 }, __self: this },
                /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_FontIcon2.default, /* istanbul ignore next */{ className: 'material-icons', color: 'red', __source: { fileName: _jsxFileName, lineNumber: 70 }, __self: this }, /* istanbul ignore next */'delete')), __source: { fileName: _jsxFileName, lineNumber: 63 }, __self: this }),




            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_Divider2.default, /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 75 }, __self: this })));

      }));
  }


  render() {
    const { intl, tasks, setIsCreating, muiTheme } = this.props;

    return (
      /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_Activity.Activity, /* istanbul ignore next */{
          title: intl.formatMessage({ id: 'tasks' }), __source: { fileName: _jsxFileName, lineNumber: 85 }, __self: this },
        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 87 }, __self: this },
          tasks.isFetching &&
          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ style: styles.center_container, __source: { fileName: _jsxFileName, lineNumber: 89 }, __self: this },
            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_CircularProgress2.default, /* istanbul ignore next */{ size: 80, thickness: 5, __source: { fileName: _jsxFileName, lineNumber: 90 }, __self: this })),



          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ style: { overflow: 'none', backgroundColor: muiTheme.palette.convasColor }, __source: { fileName: _jsxFileName, lineNumber: 94 }, __self: this },
            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_List.List, /* istanbul ignore next */{ id: 'test', style: { height: '100%' }, __source: { fileName: _jsxFileName, lineNumber: 95 }, __self: this },
              this.rednerTasks(tasks.list))),





          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ style: { display: 'flex', zIndex: 3, alignItems: 'center', justifyContent: 'center', flexDirection: 'column', position: 'fixed', bottom: 15, left: 0, width: '100%' }, __source: { fileName: _jsxFileName, lineNumber: 102 }, __self: this },

            tasks.isCreating &&
            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_Chip2.default, /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 105 }, __self: this },
              /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_TextField2.default, /* istanbul ignore next */{
                onKeyDown: this.handleKeyDown,
                ref: field => {this.name = field;this.name && this.name.focus();},
                hintText: intl.formatMessage({ id: 'name' }), __source: { fileName: _jsxFileName, lineNumber: 106 }, __self: this }),

              /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_IconButton2.default, /* istanbul ignore next */{
                  onTouchTap: this.handleAddTask, __source: { fileName: _jsxFileName, lineNumber: 111 }, __self: this },
                /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_FontIcon2.default, /* istanbul ignore next */{ className: 'material-icons', color: muiTheme.palette.primary1Color, __source: { fileName: _jsxFileName, lineNumber: 113 }, __self: this }, /* istanbul ignore next */'send'))),




            !tasks.isCreating &&
            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_FloatingActionButton2.default, /* istanbul ignore next */{ onTouchTap: () => {setIsCreating(true);}, style: { zIndex: 3 }, __source: { fileName: _jsxFileName, lineNumber: 119 }, __self: this },
              /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_FontIcon2.default, /* istanbul ignore next */{ className: 'material-icons', __source: { fileName: _jsxFileName, lineNumber: 120 }, __self: this }, /* istanbul ignore next */'add'))))));















  }}



Tasks.propTypes = {
  intl: /* istanbul ignore next */_reactIntl.intlShape.isRequired,
  muiTheme: /* istanbul ignore next */_propTypes2.default.object.isRequired,
  loadTasks: /* istanbul ignore next */_propTypes2.default.func.isRequired,
  createTask: /* istanbul ignore next */_propTypes2.default.func.isRequired,
  deleteTask: /* istanbul ignore next */_propTypes2.default.func.isRequired,
  setIsCreating: /* istanbul ignore next */_propTypes2.default.func.isRequired };



const mapStateToProps = state => {
  const { tasks } = state;
  return {
    tasks };

}; /* istanbul ignore next */exports.default =


/* istanbul ignore next */(0, _reactRedux.connect)(
mapStateToProps,
{
  loadTasks: /* istanbul ignore next */_actions.loadTasks, filterTasks: /* istanbul ignore next */_actions.filterTasks, createTask: /* istanbul ignore next */_actions.createTask, deleteTask: /* istanbul ignore next */_actions.deleteTask, unloadTasks: /* istanbul ignore next */_actions.unloadTasks, setIsCreating: /* istanbul ignore next */_actions.setIsCreating })(

/* istanbul ignore next */(0, _reactIntl.injectIntl)( /* istanbul ignore next */(0, _muiThemeable2.default)()(Tasks)));
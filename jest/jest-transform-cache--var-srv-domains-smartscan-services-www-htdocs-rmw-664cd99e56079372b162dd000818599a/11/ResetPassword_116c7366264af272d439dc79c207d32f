/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });exports.ResetPasswordTest = exports.ResetPassword = undefined;var _jsxFileName = '/var/srv/domains/smartscan.services/www/htdocs/rmw/src/containers/ResetPassword/ResetPassword.js';var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_reactRedux = require('react-redux');
var /* istanbul ignore next */_propTypes = require('prop-types'); /* istanbul ignore next */var _propTypes2 = _interopRequireDefault(_propTypes);
var /* istanbul ignore next */_muiThemeable = require('material-ui/styles/muiThemeable'); /* istanbul ignore next */var _muiThemeable2 = _interopRequireDefault(_muiThemeable);
var /* istanbul ignore next */_reactIntl = require('react-intl');
var /* istanbul ignore next */_Paper = require('material-ui/Paper'); /* istanbul ignore next */var _Paper2 = _interopRequireDefault(_Paper);
var /* istanbul ignore next */_TextField = require('material-ui/TextField'); /* istanbul ignore next */var _TextField2 = _interopRequireDefault(_TextField);
var /* istanbul ignore next */_RaisedButton = require('material-ui/RaisedButton'); /* istanbul ignore next */var _RaisedButton2 = _interopRequireDefault(_RaisedButton);
var /* istanbul ignore next */_FontIcon = require('material-ui/FontIcon'); /* istanbul ignore next */var _FontIcon2 = _interopRequireDefault(_FontIcon);
var /* istanbul ignore next */_actions = require('../../store/auth/actions');
var /* istanbul ignore next */_selectors = require('../../store/auth/selectors');
var /* istanbul ignore next */_reactRouterRedux = require('react-router-redux');
var /* istanbul ignore next */_materialUiResponsiveDrawer = require('material-ui-responsive-drawer');
var /* istanbul ignore next */_Activity = require('../../components/Activity');
var /* istanbul ignore next */_Snackbar = require('material-ui/Snackbar'); /* istanbul ignore next */var _Snackbar2 = _interopRequireDefault(_Snackbar);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

const styles = {
  paper: {
    height: '100%',
    display: 'block',
    margin: 0,
    padding: 15,
    minWidth: 300 },

  container: {
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    margin: 5,
    paddingTop: 50 } };




class ResetPassword extends /* istanbul ignore next */_react.Component {

  constructor(props) {
    super(props); /* istanbul ignore next */this.




    handleResetSuccess = result => {
      const { push, authError } = this.props;
      authError({
        code: 'success',
        message: 'Reset email successfully send. Pleas check inbox.' });

      push('signin');
    }; /* istanbul ignore next */this.

    hanleSignInSubmit = () => {
      const { resetPasswordEmail } = this.props;
      resetPasswordEmail(this.email.getValue(), this.handleResetSuccess);
    };this.email = null;}


  render() {
    const { intl, getValidationErrorMessage, auth, push, authError } = this.props;

    const isSnackbarOpen = auth.error !== undefined &&
    auth.error.message &&
    auth.error.code.indexOf('email') < 0;

    return (
      /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_Activity.Activity, /* istanbul ignore next */{
          onBackClick: () => {push('signin');},
          title: intl.formatMessage({ id: 'reset_password' }), __source: { fileName: _jsxFileName, lineNumber: 66 }, __self: this },
        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ style: styles.container, __source: { fileName: _jsxFileName, lineNumber: 69 }, __self: this },
          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_Paper2.default, /* istanbul ignore next */{ zDepth: 2, style: styles.paper, __source: { fileName: _jsxFileName, lineNumber: 70 }, __self: this },
            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ style: { marginBottom: 20 }, __source: { fileName: _jsxFileName, lineNumber: 71 }, __self: this },
              /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_TextField2.default, /* istanbul ignore next */{
                id: 'email',
                ref: field => {this.email = field;},
                defaultValue: auth.email,
                errorText: getValidationErrorMessage('email'),
                floatingLabelText: intl.formatMessage({ id: 'email' }),
                hintText: intl.formatMessage({ id: 'reset_password_hint' }),
                type: 'Email',
                fullWidth: true, __source: { fileName: _jsxFileName, lineNumber: 72 }, __self: this }),
              /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'br', /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 81 }, __self: this })),


            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_RaisedButton2.default, /* istanbul ignore next */{
              label: intl.formatMessage({ id: 'reset_password' }),
              secondary: true,
              fullWidth: true,
              onTouchTap: this.hanleSignInSubmit,
              icon:
              /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_FontIcon2.default, /* istanbul ignore next */{
                  className: 'material-icons', __source: { fileName: _jsxFileName, lineNumber: 90 }, __self: this }, /* istanbul ignore next */'refresh'), __source: { fileName: _jsxFileName, lineNumber: 84 }, __self: this }),




            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'br', /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 96 }, __self: this }))),




        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_Snackbar2.default, /* istanbul ignore next */{
          bodyStyle: { height: '100%' },
          open: isSnackbarOpen,
          message: isSnackbarOpen ? auth.error.message : '',
          action: 'OK',
          autoHideDuration: 5000,
          onRequestClose: () => {authError(undefined);},
          onActionTouchTap: () => {authError(undefined);}, __source: { fileName: _jsxFileName, lineNumber: 101 }, __self: this })));




  }} /* istanbul ignore next */exports.ResetPassword = ResetPassword;



ResetPassword.propTypes = {
  intl: /* istanbul ignore next */_reactIntl.intlShape.isRequired,
  muiTheme: /* istanbul ignore next */_propTypes2.default.object.isRequired };



const mapStateToProps = state => {
  const { auth, router } = state;
  return {
    auth,
    router,
    getValidationErrorMessage: fieldID => /* istanbul ignore next */(0, _selectors.getValidationErrorMessage)(auth, fieldID) };

};

const ResetPasswordTest = /* istanbul ignore next */exports.ResetPasswordTest = /* istanbul ignore next */(0, _reactIntl.injectIntl)( /* istanbul ignore next */(0, _muiThemeable2.default)()(ResetPassword)); /* istanbul ignore next */exports.default =

/* istanbul ignore next */(0, _reactRedux.connect)(
mapStateToProps,
{ signUpUser: /* istanbul ignore next */_actions.signUpUser, authError: /* istanbul ignore next */_actions.authError, push: /* istanbul ignore next */_reactRouterRedux.push, setDrawerOpen: /* istanbul ignore next */_materialUiResponsiveDrawer.setDrawerOpen, resetPasswordEmail: /* istanbul ignore next */_actions.resetPasswordEmail })(
/* istanbul ignore next */(0, _reactIntl.injectIntl)( /* istanbul ignore next */(0, _muiThemeable2.default)()(ResetPassword)));
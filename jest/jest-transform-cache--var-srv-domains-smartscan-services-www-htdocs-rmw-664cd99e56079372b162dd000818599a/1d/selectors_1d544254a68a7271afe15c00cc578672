/* istanbul ignore next */"use strict";Object.defineProperty(exports, "__esModule", { value: true });var cov_1is0ia8kkr = function () {var path = "/var/srv/domains/smartscan.services/www/htdocs/rmw/src/store/auth/selectors.js",hash = "f3a1cf1b919d6a94547ec514b340d6a11116c702",global = new Function('return this')(),gcv = "__coverage__",coverageData = { path: "/var/srv/domains/smartscan.services/www/htdocs/rmw/src/store/auth/selectors.js", statementMap: { "0": { start: { line: 1, column: 23 }, end: { line: 32, column: 1 } }, "1": { start: { line: 3, column: 2 }, end: { line: 26, column: 3 } }, "2": { start: { line: 13, column: 8 }, end: { line: 13, column: 20 } }, "3": { start: { line: 16, column: 4 }, end: { line: 25, column: 5 } }, "4": { start: { line: 28, column: 2 }, end: { line: 30, column: 4 } }, "5": { start: { line: 34, column: 41 }, end: { line: 41, column: 1 } }, "6": { start: { line: 36, column: 2 }, end: { line: 38, column: 3 } }, "7": { start: { line: 37, column: 4 }, end: { line: 37, column: 30 } }, "8": { start: { line: 40, column: 2 }, end: { line: 40, column: 19 } }, "9": { start: { line: 43, column: 28 }, end: { line: 45, column: 1 } }, "10": { start: { line: 44, column: 2 }, end: { line: 44, column: 35 } } }, fnMap: { "0": { name: "(anonymous_0)", decl: { start: { line: 1, column: 23 }, end: { line: 1, column: 24 } }, loc: { start: { line: 1, column: 41 }, end: { line: 32, column: 1 } }, line: 1 }, "1": { name: "(anonymous_1)", decl: { start: { line: 34, column: 41 }, end: { line: 34, column: 42 } }, loc: { start: { line: 34, column: 60 }, end: { line: 41, column: 1 } }, line: 34 }, "2": { name: "(anonymous_2)", decl: { start: { line: 43, column: 28 }, end: { line: 43, column: 29 } }, loc: { start: { line: 43, column: 38 }, end: { line: 45, column: 1 } }, line: 43 } }, branchMap: { "0": { loc: { start: { line: 3, column: 2 }, end: { line: 26, column: 3 } }, type: "if", locations: [{ start: { line: 3, column: 2 }, end: { line: 26, column: 3 } }, { start: { line: 3, column: 2 }, end: { line: 26, column: 3 } }], line: 3 }, "1": { loc: { start: { line: 36, column: 2 }, end: { line: 38, column: 3 } }, type: "if", locations: [{ start: { line: 36, column: 2 }, end: { line: 38, column: 3 } }, { start: { line: 36, column: 2 }, end: { line: 38, column: 3 } }], line: 36 }, "2": { loc: { start: { line: 36, column: 5 }, end: { line: 36, column: 80 } }, type: "binary-expr", locations: [{ start: { line: 36, column: 5 }, end: { line: 36, column: 9 } }, { start: { line: 36, column: 13 }, end: { line: 36, column: 23 } }, { start: { line: 36, column: 27 }, end: { line: 36, column: 42 } }, { start: { line: 36, column: 46 }, end: { line: 36, column: 80 } }], line: 36 }, "3": { loc: { start: { line: 44, column: 9 }, end: { line: 44, column: 34 } }, type: "binary-expr", locations: [{ start: { line: 44, column: 9 }, end: { line: 44, column: 13 } }, { start: { line: 44, column: 17 }, end: { line: 44, column: 34 } }], line: 44 } }, s: { "0": 0, "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 0, "7": 0, "8": 0, "9": 0, "10": 0 }, f: { "0": 0, "1": 0, "2": 0 }, b: { "0": [0, 0], "1": [0, 0], "2": [0, 0, 0, 0], "3": [0, 0] }, _coverageSchema: "332fd63041d2c1bcb487cc26dd0d5f7d97098a6c" },coverage = global[gcv] || (global[gcv] = {});if (coverage[path] && coverage[path].hash === hash) {return coverage[path];}coverageData.hash = hash;return coverage[path] = coverageData;}();const getUser = /* istanbul ignore next */exports.getUser = (++cov_1is0ia8kkr.s[0], firebaseUser => {/* istanbul ignore next */++cov_1is0ia8kkr.f[0];++cov_1is0ia8kkr.s[1];

  if (firebaseUser) {/* istanbul ignore next */++cov_1is0ia8kkr.b[0][0];

    const {
      displayName,
      email,
      emailVerified,
      photoURL,
      isAnonymous,
      uid,
      providerData } = /* istanbul ignore next */(++cov_1is0ia8kkr.s[2],
    firebaseUser); /* istanbul ignore next */++cov_1is0ia8kkr.s[3];


    return {
      isAuthorised: true,
      displayName,
      email,
      emailVerified,
      photoURL,
      isAnonymous,
      uid,
      providerData };

  } else /* istanbul ignore next */{++cov_1is0ia8kkr.b[0][1];}++cov_1is0ia8kkr.s[4];

  return {
    isAuthorised: false };


});

const getValidationErrorMessage = /* istanbul ignore next */exports.getValidationErrorMessage = (++cov_1is0ia8kkr.s[5], (auth, fieldID) => {/* istanbul ignore next */++cov_1is0ia8kkr.f[1];++cov_1is0ia8kkr.s[6];

  if ( /* istanbul ignore next */(++cov_1is0ia8kkr.b[2][0], auth) && /* istanbul ignore next */(++cov_1is0ia8kkr.b[2][1], auth.error) && /* istanbul ignore next */(++cov_1is0ia8kkr.b[2][2], auth.error.code) && /* istanbul ignore next */(++cov_1is0ia8kkr.b[2][3], auth.error.code.indexOf(fieldID) > 0)) {/* istanbul ignore next */++cov_1is0ia8kkr.b[1][0];++cov_1is0ia8kkr.s[7];
    return auth.error.message;
  } else /* istanbul ignore next */{++cov_1is0ia8kkr.b[1][1];}++cov_1is0ia8kkr.s[8];

  return undefined;
});

const isAuthorised = /* istanbul ignore next */exports.isAuthorised = (++cov_1is0ia8kkr.s[9], auth => {/* istanbul ignore next */++cov_1is0ia8kkr.f[2];++cov_1is0ia8kkr.s[10];
  return (/* istanbul ignore next */(++cov_1is0ia8kkr.b[3][0], auth) && /* istanbul ignore next */(++cov_1is0ia8kkr.b[3][1], auth.isAuthorised));
});